Link:https://www.quora.com/How-does-SOA-and-SOAP-differ

SOAP (simple object access protocol) is a protocol, SOA (service oriented architecture) is an architectural style.
An architectural style consists of components and how they are connected, the data exchanged between them, and how these are arranged in a system.
A protocol is a set of rules about how communication takes place between two or more components in a system.

With SOA, a distributed application is composed of services. These services can be provided across administrative domains - they may be available across the web (i.e. a storage service offered by a cloud provider). As web services became popular, and more applications started using them, service composition (combining services to form new ones) became more important. One of the problems with SOA was that integrating different services could become extremely complicated.

While SOAP is a protocol, its use implies a service oriented architecture. SOAP attempted to provide a standard for services whereby they would be composable and easily integrated.

So while the use of SOAP implies a service oriented architecture (SOA), the use of a SOA does not imply the use of SOAP. Still to this day there are many HTTP-based web services that do not conform to the SOAP protocol. And if your service doesn’t need to be integrated across the web you probably do not need to go to the trouble of making it comply with SOAP, because that involves alot of effort.

Also… a RESTful service uses a resource-based architecture (ROA), REST does not use a SOA… these are different styles. Notably REST does not provide a service interface or maintain state on the server the way a SOA does.

