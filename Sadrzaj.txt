Sadržaj:

1.Uvod

{
	Pregled nedostatka strojno čitljivog opisa web servisa
	Problematika formalne definicije funkcionalnosti web servisa
	Cilj istraživanja: Automatsko generiranje opisa RESTful web servisa
}

2. Metode i tehnike rada

3. Servisno-orijentirana arhitektura
3.1. Osnovni koncepti SOA
3.2. Karakteristike SOA
3.3. Dobrobiti kod korištenja SOA-e
3.4. Izazovi kod SOA-e

4. Web servisi
4.1. Definicija web servisa i njihova uloga u modernom razvoju aplikacija
4.2. Arhitektura web servisa
4.2. Različiti pristupi i tehnologije za implementaciju web servisa
4.3. RESTful servisi
4.3.1. Pregled principa RESTful arhitekture
4.3.2. Prednosti i ograničenja RESTful servisa
4.4. Komunikacija putem SOAP protokola
4.4.1. Karakteristike SOAP protokola
4.4.2. SOAP struktura
4.4.3. Format poruke 

5. Jezici za opis funkcionalnosti web servisa
5.1. Pregled popularnih jezika i standarda za opis web servisa
5.2. WSDL
5.3. UDDI
5.4. OpenAPI specifikacija

6. Obrada prirodnog jezika
6.1. Osnovni koncepti obrade prirodnog jezika
6.2. Zadaci obrade prirodnog jezika
6.3. Metode obrade prirodnog jezika (NLP)
6.4. Primjena obrade prirodnog jezika u stvarnom svijetu 

7. Primjeri dostupnih API-ja
7.1. Pregled primjera RESTful web servisa bez strojno čitljivog opisa
7.2. Demonstracija primjene metoda obrade prirodnog jezika za generiranje opisa tih servisa
7.3. Implementacija i rezultati
7.3.1. Opis implementacije automatskog generiranja opisa RESTful web servisa

8.Evaluacija rezultata i usporedba s ručno generiranim opisima

9.Zaključak
{
	Sažetak rada i zaključne misli
	Prijedlozi za daljnje istraživanje u području generiranja opisa web servisa
}

Poštovani profesore,

u nastavku Vam šaljem okvirni prijedlog za sadržaj i praktični dio završnog rada.

Sadržaj:
1. Uvod
2. Metode i tehnike rada
3. Servisno-orijentirana arhitektura
3.1. Osnovni koncepti SOA
3.2. Karakteristike SOA
3.3. Dobrobiti kod korištenja SOA-e
3.4. Izazovi kod SOA-e
4. Web servisi
4.1. Definicija web servisa i njihova uloga u modernom razvoju aplikacija
4.2. Arhitektura web servisa
4.2. Različiti pristupi i tehnologije za implementaciju web servisa
4.3. RESTful servisi
4.3.1. Pregled principa RESTful arhitekture
4.3.2. Prednosti i ograničenja RESTful servisa
4.4. Komunikacija putem SOAP protokola
4.4.1. Karakteristike SOAP protokola
4.4.2. SOAP struktura
4.4.3. Format poruke 
5. Jezici za opis funkcionalnosti web servisa
5.1. Važnost opisa web servisa
5.2. Pregled popularnih jezika i standarda za opis web servisa
5.3.1. WSDL
5.4.3. UDDI
5.5.4. WADL
5.6.5. OpenAPI specifikacija
6. Obrada prirodnog jezika
6.1. Osnovni koncepti obrade prirodnog jezika
6.2. Zadaci obrade prirodnog jezika
6.3. Metode obrade prirodnog jezika (NLP)
6.4. Primjena obrade prirodnog jezika u stvarnom svijetu 
7. Implementacija softvera za generiranje opisa RESTful servisa
7.1. Pregled primjera RESTful web servisa bez strojno čitljivog opisa
7.2. Implementacija i rezultati
7.3.1. Opis implementacije automatskog generiranja opisa RESTful web servisa
8.Evaluacija rezultata i usporedba s ručno generiranim opisima
9.Zaključak
Popis literature
Popis slika
Popis tablica
Prilozi

Praktični dio:
Praktični dio se odnosi na web aplikaciju koja putem korisničkog sučelja prima tekstualni opis API-ja i preko integriranog ChatGPT modela izgenerirat će putanje koje će biti prepoznate u ulaznome tekstu, a output modela će biti specifikacija API-ja u JSON obliku. Potom će ta JSON datoteka biti proslijeđena dijelu aplikacije koji će uz pomoć swagger-ui-express NodeJS biblioteke kreirati OpenAPI specifikaciju unesenog API-ja. Unutar OpenAI specifikacije, bit će moguće testirati ispravnost generiranih resursa. Web aplikacija bi bila izrađena pomoću NodeJS-a i pripadajućih biblioteki.

Što se tiče ideje za praktični dio, nisam bio siguran koliko se trebam fokusirati na dio s obradom prirodnog teksta (to mi je oduzelo najviše vremena) i koliko je važan u razradi teme naspram generiranju opisa RESTful web servisa i da li po tom pitanju trebam napraviti vlastiti model obrade podataka (gdje sam iskoristio chatbot). Također nisam bio siguran što trebaju biti ulazni podaci za obradu, da li je to obični tekst ili poveznica na neku stranicu s dokumentacijom koju treba analizirati ili korisnik ručno analizira neformalnu dokumentaciju (što predstavlja obradu teksta) pa zapisuje u aplikaciju koja kasnije generira specifikaciju. Svaki prijedlog i savjet će dobro doći.

Lijepi pozdrav,
Matija Tomašić
